
buildscript {
	dependencies {
		classpath (group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1')
		classpath (group: 'dk.bankdata.gradle.swagger', name: 'gradle-swagger-plugin', version: '2.0.0')
	}
}

plugins {
	id("org.springframework.boot") version "2.1.8.RELEASE"
	id("io.spring.dependency-management") version "1.0.8.RELEASE"

	id "org.jetbrains.kotlin.jvm" version "1.3.50"
	id "org.jetbrains.kotlin.plugin.spring" version "1.3.50"
	id "org.jetbrains.kotlin.plugin.jpa" version "1.3.50"

	id 'com.bmuschko.docker-spring-boot-application' version '6.1.1'
}

apply plugin: 'dk.bankdata.swagger'

repositories {
	mavenCentral()
}

configurations {
	provided
}

sourceSets {
	main { compileClasspath += configurations.provided }
}


dependencies {
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-jersey")
//	implementation("org.springframework.boot:spring-boot-starter-security")
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin")

	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

	implementation("org.glassfish.jersey.media:jersey-media-multipart:2.27")

	provided("io.swagger.core.v3:swagger-annotations:2.0.0")

	runtimeOnly("com.h2database:h2")

	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude(module: "junit")
	}
	testImplementation("org.springframework.security:spring-security-test")
	testImplementation("org.junit.jupiter:junit-jupiter-api:5.3.2")
	testImplementation("org.junit.jupiter:junit-jupiter-engine:5.3.2")
	testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.1.0'
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

swagger {
	resourcePackages = ['io.rss.openapiboard.server.presentation.resource']

	info {
		title = 'OpenAPI Board Server'
		version = '0.0.1'
		description = 'This service provides storage and retrieving of OpenAPI documents. ' +
				'Supporting multi versions and grouping by namespace'
	}
}

docker {
	springBootApplication {
		baseImage = 'openjdk:8-alpine'
		ports = [8080]
		images = ['oaboard-server:oab', 'oaboard-server:latest']
		jvmArgs = []
	}
}

group = "io.rss"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_1_8
