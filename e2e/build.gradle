
plugins {
	id("org.springframework.boot") //version "2.7.0"
	id("io.spring.dependency-management") //version "1.0.12.RELEASE"

	id "org.jetbrains.kotlin.jvm" // version "1.3.50"
	id "org.jetbrains.kotlin.plugin.spring" version "1.6.21"
}

dependencies {
	implementation project(":core")

	implementation("org.springframework.boot:spring-boot-starter-security")
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation("com.h2database:h2")

	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation("org.jetbrains.kotlin:kotlin-stdlib")

	/* Testing */
	testImplementation("org.springframework.security:spring-security-test")

	testImplementation group: 'org.spekframework.spek2', name: 'spek-dsl-jvm', version: '2.0.19'
	testImplementation group: 'org.spekframework.spek2', name: 'spek-runner-junit5', version: '2.0.19'
}

java.sourceCompatibility = JavaVersion.VERSION_11

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "11"
	}
}

test {
	useJUnitPlatform {
	}
}

bootRun {
	main = "sandbox.SandboxDataApp"

	doFirst {
		def h2DB = [
				db_classname: 'org.h2.Driver',
				db_url: 'h2:mem:openapi-board',
//		db_url: 'h2:~/openapi-board',
				hibernate_dialect: 'org.hibernate.dialect.H2Dialect',
				db_username: 'sa',
				db_password: "''"
		];

		h2DB.each {e ->
			systemProperty e.key, e.value
		}
	}
}

// ------------------------------------ Env-dependent tasks ----------------------------------

task copyTestResource(type: Copy) {
	from "${project.projectDir}/src/test/resources"
	into "${project.buildDir}/resources/main"

	doFirst {
		print "Copying files for testing..."
	}
}